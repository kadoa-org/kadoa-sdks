name: Daily fetch OpenAPI and open PR

on:
  schedule:
    - cron: "17 7 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

concurrency:
  group: daily-fetch-openapi-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fetch-and-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.2.21"

      - name: Install deps (root)
        env:
          HUSKY: 0
        run: bun install --frozen-lockfile

      - name: Fetch latest OpenAPI spec
        env:
          KADOA_OPENAPI_ENDPOINT: https://api.kadoa.com/openapi
        run: |
          bun run kadoa-codegen fetch-spec -e "$KADOA_OPENAPI_ENDPOINT"

      - name: Detect changes
        id: diff
        run: |
          if git diff --quiet -- specs/openapi.json; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Analyze changes with Claude
        if: steps.diff.outputs.changed == 'true'
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            The OpenAPI spec in specs/openapi.json has been updated.

            Your task: Analyze the git diff and write a concise markdown summary to analysis.md

            Steps:
            1. Run: git diff specs/openapi.json specs/openapi-metadata.json
            2. Analyze the changes focusing on:
               - Schema changes (data model structures)
               - Endpoint changes (new/modified/removed APIs)
               - Breaking vs non-breaking changes
               - Metadata updates (checksum, version, timestamp)
            3. Write analysis to analysis.md (in the current directory) using this structure:

            ```markdown
            ### Summary of Changes

            [Brief overview paragraph]

            #### Schema Changes
            - [List key structural changes to data models]
            - [Use bullet points]

            #### Endpoint Changes
            - [List new/modified/removed API endpoints]
            - [Specify HTTP methods and paths]

            #### Breaking Changes
            - [Yes/No - if yes, explain what breaks]

            #### Metadata Changes
            - **Checksum**: [old value] â†’ [new value]
            - **Fetched At**: [timestamp]
            - **API Version**: [version]

            #### Impact Assessment
            - **Backward Compatibility**: [Assessment]
            - **SDK Generation**: [Any impacts on code generation]
            ```

            IMPORTANT:
            - Use Write tool to save to analysis.md in current directory
            - Keep analysis concise (300-500 words)
            - Focus on developer-relevant changes
            - Use clear markdown formatting
          claude_args: |
            --allowedTools "Read,Write,Bash(git diff:*)"
            --model claude-sonnet-4-5-20250929

      - name: Upload analysis artifact
        if: steps.diff.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: openapi-analysis
          path: analysis.md
          retention-days: 1

      - name: Download analysis artifact
        if: steps.diff.outputs.changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: openapi-analysis

      - name: Prepare PR body
        if: steps.diff.outputs.changed == 'true'
        run: |
          # Read Claude's analysis
          ANALYSIS=$(cat analysis.md)

          # Create PR body file
          cat > pr-body.md << 'EOF'
          ## OpenAPI Spec Update

          This PR updates `specs/openapi.json` and `specs/openapi-metadata.json` with the latest version from `https://api.kadoa.com/openapi`.

          EOF

          echo "$ANALYSIS" >> pr-body.md

          cat >> pr-body.md << 'EOF'

          ---

          **Next Steps:** If merged, the spec fingerprint workflow will trigger SDK releases if needed.

          ðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)
          EOF

      - name: Create pull request
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(spec): update OpenAPI spec

            Updates specs/openapi.json and specs/openapi-metadata.json with the latest version from https://api.kadoa.com/openapi.

            ðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)

            Co-Authored-By: Claude <noreply@anthropic.com>
          title: "chore(spec): update OpenAPI spec"
          body-path: pr-body.md
          branch: ci/daily-openapi-update
          delete-branch: true
          labels: ci

      - name: No changes
        if: steps.diff.outputs.changed != 'true'
        run: echo "OpenAPI spec unchanged; no PR created."
