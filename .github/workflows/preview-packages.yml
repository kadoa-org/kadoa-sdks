name: Preview Packages (development)

on:
    push:
        branches: [development]
    workflow_dispatch:

permissions:
    contents: read

concurrency:
    group: preview-${{ github.ref }}
    cancel-in-progress: false

jobs:
    node-preview:
        name: Node SDK preview → npm @next
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: sdks/node
        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: 1.x

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: https://registry.npmjs.org
                  always-auth: true

            - name: Install deps (workspace root)
              working-directory: .
              run: bun install --frozen-lockfile

            - name: Build Node SDK
              run: bun run build

            - name: Compute preview version
              id: ver
              shell: bash
              run: |
                  BASE=$(jq -r '.version' package.json)
                  SHA=${GITHUB_SHA::7}
                  PRE="$BASE-dev.$SHA.${{ github.run_number }}"
                  echo "version=$PRE" >> $GITHUB_OUTPUT

            - name: Set preview version (no commit)
              run: npm pkg set version="${{ steps.ver.outputs.version }}"

            - name: Publish to npm with dist-tag next
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: npm publish --tag next --access public

            - name: Summary
              if: always()
              run: |
                  echo "### Node preview published" >> $GITHUB_STEP_SUMMARY
                  echo "- package: @kadoa/node-sdk" >> $GITHUB_STEP_SUMMARY
                  echo "- version: ${{ steps.ver.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- install: npm install @kadoa/node-sdk@next" >> $GITHUB_STEP_SUMMARY

    python-preview:
        name: Python SDK preview → TestPyPI
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: sdks/python
        steps:
            - name: Checkout
              uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.12"

            - name: Install build tooling
              run: |
                  python -m pip install --upgrade pip
                  pip install build twine

            - name: Compute preview version
              id: pyver
              shell: bash
              run: |
                  BASE=$(grep -E '^version\s*=\s*"' pyproject.toml | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')
                  SHA=${GITHUB_SHA::7}
                  PRE="$BASE.dev${{ github.run_number }}+g$SHA"
                  echo "version=$PRE" >> $GITHUB_OUTPUT

            - name: Apply preview version (pyproject.toml)
              run: |
                  sed -i.bak -E "s/(^version\s*=\s*")([^"]+)("\s*$)/\1${{ steps.pyver.outputs.version }}\3/" pyproject.toml
                  rm -f pyproject.toml.bak

            - name: Apply preview version (kadoa_sdk/version.py)
              run: |
                  sed -i.bak -E "s/^(__version__\s*=\s*")([^"]+)("\s*)$/\1${{ steps.pyver.outputs.version }}\3/" kadoa_sdk/version.py
                  rm -f kadoa_sdk/version.py.bak

            - name: Build sdist and wheel
              run: python -m build

            - name: Publish to TestPyPI
              env:
                  TWINE_USERNAME: __token__
                  TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
              run: |
                  python -m twine upload dist/* --repository-url https://test.pypi.org/legacy/ --non-interactive

            - name: Summary
              if: always()
              run: |
                  echo "### Python preview published" >> $GITHUB_STEP_SUMMARY
                  echo "- package: kadoa_sdk" >> $GITHUB_STEP_SUMMARY
                  echo "- version: ${{ steps.pyver.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- install: pip install -i https://test.pypi.org/simple kadoa_sdk==${{ steps.pyver.outputs.version }}" >> $GITHUB_STEP_SUMMARY
